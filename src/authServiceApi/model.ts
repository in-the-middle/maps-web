/**
 * ua.trip.auth.service.api.v1.AuthServiceApi
 * Auth Service
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ermakovsa03@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Object that represents login and encrypted password of user
 */
export interface AuthenticationDTO {
    username?: string;
    encryptedPassword?: string;
}
/**
 * @export
 * @enum {string}
 */
export enum EmailStatusDTO {
    VERIFIED = "VERIFIED",
    WRONGCODE = "WRONG_CODE",
    TOOMANYTRIES = "TOO_MANY_TRIES",
}

/**
 * Object that represents user location
 */
export interface FriendDTO {
    username?: string;
    locationPermission?: LocationPermissionDTO;
    friendStatus?: FriendDTOFriendStatusEnum;
    lat?: number;
    lon?: number;
}

export enum FriendDTOFriendStatusEnum {
    FRIENDS = "FRIENDS",
    INVITEDBYME = "INVITED_BY_ME",
    INVITEDBYHIM = "INVITED_BY_HIM",
}

/**
 * Object that represents Google Auth object
 */
export interface GoogleAuthDTO {
    tokenId?: string;
}

export interface KeyDTO {
    kid?: string;
    alg?: string;
    value?: string;
}

/**
 * Object that represents user location
 */
export interface LocationDTO {
    id?: string;
    lat?: number;
    lon?: number;
}
/**
 * @export
 * @enum {string}
 */
export enum LocationPermissionDTO {
    ALLOWED = "ALLOWED",
    NOTALLOWED = "NOT_ALLOWED",
}
/**
 * @export
 * @enum {string}
 */
export enum PasswordResetStatusDTO {
    PASSWORDCHANGED = "PASSWORD_CHANGED",
    WRONGCODE = "WRONG_CODE",
    WEAKPASSWORD = "WEAK_PASSWORD",
}

/**
 * Object that represents Refresh Token
 */
export interface RefreshTokenDTO {
    token?: string;
}
/**
 * @export
 * @enum {string}
 */
export enum StatusDTO {
    CREATED = "CREATED",
    USERNAMEALREADYEXISTS = "USERNAME_ALREADY_EXISTS",
    EMAILALREADYEXISTS = "EMAIL_ALREADY_EXISTS",
    WEAKPASSWORD = "WEAK_PASSWORD",
}

export interface TokenDTO {
    token?: string;
    tokenType?: string;
    expiresInSeconds?: number;
}

export interface TokensDTO {
    accessToken?: TokenDTO;
    refreshToken?: TokenDTO;
}

/**
 * Object that represents user information
 */
export interface UserDTO {
    username?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    encryptedPassword?: string;
}
