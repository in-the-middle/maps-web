/* eslint @typescript-eslint/no-unused-vars: off */
/**
 * ua.trip.auth.service.api.v1.AuthServiceApi
 * Auth Service
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ermakovsa03@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AuthenticationDTO,
    EmailStatusDTO,
    FriendDTO,
    GoogleAuthDTO,
    KeyDTO,
    LocationDTO,
    LocationPermissionDTO,
    PasswordResetStatusDTO,
    RefreshTokenDTO,
    StatusDTO,
    TokenDTO,
    TokensDTO,
    UserDTO,
} from "../model";

import {
    ApplicationApis,
    DefaultApiInterface,
} from "../api";

function reject(operation: string) {
    return () => Promise.reject(new Error("Unexpected function call " + operation));
}

export function mockApplicationApis({
    defaultApi = mockDefaultApi(),
}: Partial<ApplicationApis>): ApplicationApis {
    return { defaultApi };
}

export function mockDefaultApi(operations: {
    addFriend?: () => Promise<void>;
    authenticate?: () => Promise<TokensDTO>;
    authenticateWithGoogle?: () => Promise<TokensDTO>;
    changeLocationPermission?: () => Promise<void>;
    deleteFriend?: () => Promise<void>;
    getFriendList?: () => Promise<Array<FriendDTO>>;
    getPublicKeys?: () => Promise<Array<KeyDTO>>;
    refreshToken?: () => Promise<TokenDTO>;
    register?: () => Promise<StatusDTO>;
    resetPassword?: () => Promise<PasswordResetStatusDTO>;
    saveLocation?: () => Promise<void>;
    sendEmailCode?: () => Promise<void>;
    sendPasswordEmail?: () => Promise<void>;
    verifyEmail?: () => Promise<EmailStatusDTO>;
} = {}): DefaultApiInterface {
    return {
        addFriend: operations.addFriend || reject("DefaultApi.addFriend"),
        authenticate: operations.authenticate || reject("DefaultApi.authenticate"),
        authenticateWithGoogle: operations.authenticateWithGoogle || reject("DefaultApi.authenticateWithGoogle"),
        changeLocationPermission: operations.changeLocationPermission || reject("DefaultApi.changeLocationPermission"),
        deleteFriend: operations.deleteFriend || reject("DefaultApi.deleteFriend"),
        getFriendList: operations.getFriendList || reject("DefaultApi.getFriendList"),
        getPublicKeys: operations.getPublicKeys || reject("DefaultApi.getPublicKeys"),
        refreshToken: operations.refreshToken || reject("DefaultApi.refreshToken"),
        register: operations.register || reject("DefaultApi.register"),
        resetPassword: operations.resetPassword || reject("DefaultApi.resetPassword"),
        saveLocation: operations.saveLocation || reject("DefaultApi.saveLocation"),
        sendEmailCode: operations.sendEmailCode || reject("DefaultApi.sendEmailCode"),
        sendPasswordEmail: operations.sendPasswordEmail || reject("DefaultApi.sendPasswordEmail"),
        verifyEmail: operations.verifyEmail || reject("DefaultApi.verifyEmail"),
    };
}
